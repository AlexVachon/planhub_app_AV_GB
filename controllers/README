"""

*** TEST APIS IN POSTMAN ***

Gestion de la Logique Métier : 

    Les contrôleurs sont responsables de la gestion de la logique métier de l'application. 
    Ils agissent comme une couche intermédiaire entre les routes (URL) et les modèles de données. 
    Cela signifie qu'ils reçoivent les requêtes des utilisateurs, effectuent le traitement nécessaire, 
    puis renvoient les résultats aux vues ou modèles appropriés.

Réception des Requêtes : 

    Les contrôleurs captent les requêtes HTTP (comme les requêtes GET, POST, PUT, DELETE) provenant des utilisateurs via les routes définies dans l'application. 
    Les routes redirigent ces requêtes vers les méthodes (fonctions) spécifiques du contrôleur en fonction de l'URL demandée.

Traitement des Requêtes : 

    Les contrôleurs contiennent la logique de traitement des requêtes. 
    Cela peut inclure la validation des données entrées par l'utilisateur, l'interrogation de la base de données, 
    l'application des règles métier, et la préparation des données à envoyer en réponse.

Interactions avec les Modèles : 

    Les contrôleurs interagissent avec les modèles de données pour récupérer ou mettre à jour des informations. 
    Ils font appel aux méthodes du modèle pour effectuer des opérations de lecture, d'écriture et de modification dans la base de données.

Communication avec les Vues : 

    Une fois que les contrôleurs ont traité les données, ils renvoient généralement ces données aux vues appropriées. 
    Les vues sont responsables de la présentation des données à l'utilisateur, tandis que les contrôleurs fournissent les données nécessaires aux vues pour les afficher.

Séparation des Responsabilités : 

    Les contrôleurs contribuent à maintenir une structure de code propre et organisée. 
    Ils suivent le principe de séparation des responsabilités en veillant à ce que la logique métier ne soit pas mélangée avec la logique de présentation ou de gestion de données.

Réutilisation du Code : 

    Les contrôleurs peuvent être réutilisés dans différentes parties de l'application. 
    Par exemple, une même logique métier peut être utilisée pour afficher une liste d'utilisateurs dans différentes vues ou sections de l'application.

Tests Unitaires Facilités : 

    Étant donné que les contrôleurs représentent une couche distincte et indépendante de la logique métier, 
    ils sont généralement plus faciles à tester unitairement. 
    Vous pouvez créer des tests unitaires pour chaque méthode du contrôleur pour vous assurer que la logique métier fonctionne correctement.



"""